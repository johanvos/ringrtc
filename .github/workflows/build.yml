name: Build and publish snapshots
on:
  push:
    branches: [ java21 ]

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-latest, macos-14 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: java21
    - name: Install latest bash on macOS
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install bash
        brew install coreutils
        brew install protobuf
        pip install setuptools
    - name: linux install stuff
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler crossbuild-essential-arm64
    - name: Set environment variables
      run: |
        echo "OS=${RUNNER_OS,,}" >> $GITHUB_ENV
        echo "ARCH=${RUNNER_ARCH,,}" >> $GITHUB_ENV
        if [[ ${{ runner.os }} == "Linux" ]]
        then
          platform=unix
          rtcplatform=linux
          classifier=linux-x86_64
        elif [[ ${{ runner.os }} == "macOS" ]]
        then
          platform=mac
          rtcplatform=mac
          if [[ ${{ runner.arch }} == "X64" ]]
          then
            classifier=darwin-x86_64
          else
            classifier=darwin-aarch64
          fi
        elif [[ ${{ runner.os }} == "Windows" ]]
        then
          platform=windows
          rtcplatform=windows
          classifier=win-x86_64
        fi
        echo "RTCPLATFORM=$rtcplatform" >> $GITHUB_ENV
        echo "CLASSIFIER=$classifier" >> $GITHUB_ENV
      shell: bash
    - name: Download OpenJDK 22
      id: download
      uses: oracle-actions/setup-java@v1
      with:
        website: jdk.java.net
        release: 22
        install: false
    - name: Setup Java and Apache Maven
      uses: actions/setup-java@v3
      with:
        distribution: jdkfile
        jdkFile: ${{ steps.download.outputs.archive }}
        java-version: ${{ steps.download.outputs.version }}
        server-id: gluon-nexus
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
    - name: Checkout tools repo
      run: |
        echo "print env variables"
        echo ${{ env.OS }}
        echo ${{ env.ARCH }}
        echo ${{ env.RTCPLATFORM }}
        echo ${{ env.CLASSIFIER }}
        cd $GITHUB_WORKSPACE
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
    - name: Install rustup
      run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - name: Fetch webrtc
      run: |
        echo "filelist:"
        ls ${{ github.workspace }}
        echo "and in cwd/bin:"
        ls bin
        echo "and pwd"
        pwd
        echo "now fetch"
        ./bin/fetch-artifact --platform ${{ env.RTCPLATFORM }}-${{ env.ARCH }} --release
    - name: Download and extract JEXTRACT
      run: |
        download_url="https://download.java.net/java/early_access/jextract/22/3/openjdk-22-jextract+3-13_${{ env.OS }}-${{ env.ARCH }}_bin.tar.gz"
        wget -q --show-progress -O $RUNNER_TEMP/jextract.tar.gz $download_url
        tar -xvzf $RUNNER_TEMP/jextract.tar.gz -C $GITHUB_WORKSPACE
    - name: Build
      run: |
        export PATH=$GITHUB_WORKSPACE/depot_tools/:$PATH
        make java JEXTRACT=$GITHUB_WORKSPACE/jextract-22 JDK=$JAVA_HOME TARGET_ARCH=${{ env.ARCH }} MACOS_SDK_VERSION=12.1
    - name: Deploy snapshot
      run: |
        cd src/java/tring
        mvn -Dclassifier=${{ env.CLASSIFIER }} deploy
      env:
        MAVEN_USERNAME: ${{ secrets.GLUON_NEXUS_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.GLUON_NEXUS_PASSWORD }}
